syntax = "proto3";
package ET;

message HttpGetRouterResponse
{
	repeated string Realms = 1;
	repeated string Routers = 2;
}

message RouterSync
{
	uint32 ConnectId = 1;
	string Address = 2;
}

// ResponseType M2C_TestResponse
message C2M_TestRequest // ILocationRequest
{
	int32 RpcId = 1;
	string request = 2;
}

message M2C_TestResponse // IResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string response = 4;
}

// ResponseType G2C_EnterMap
message C2G_EnterMap // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_EnterMap // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	/// 自己的UnitId
	int64 MyId = 4;
}

message MoveInfo
{
	repeated Unity.Mathematics.float3 Points = 1;
	Unity.Mathematics.quaternion Rotation = 2;
	int32 TurnSpeed = 3;
}

message UnitInfo
{
	int64 UnitId = 1;
	int32 ConfigId = 2;
	int32 Type = 3;
	Unity.Mathematics.float3 Position = 4;
	Unity.Mathematics.float3 Forward = 5;
	map<int32, int64> KV = 6;
	MoveInfo MoveInfo = 7;
}

message M2C_CreateUnits // IMessage
{
	repeated UnitInfo Units = 1;
}

message M2C_CreateMyUnit // IMessage
{
	UnitInfo Unit = 1;
}

message M2C_StartSceneChange // IMessage
{
	int64 SceneInstanceId = 1;
	string SceneName = 2;
}

message M2C_RemoveUnits // IMessage
{
	repeated int64 Units = 1;
}

message C2M_PathfindingResult // ILocationMessage
{
	int32 RpcId = 1;
	Unity.Mathematics.float3 Position = 2;
}

message C2M_Stop // ILocationMessage
{
	int32 RpcId = 1;
}

message M2C_PathfindingResult // IMessage
{
	int64 Id = 1;
	Unity.Mathematics.float3 Position = 2;
	repeated Unity.Mathematics.float3 Points = 3;
}

message M2C_Stop // IMessage
{
	int32 Error = 1;
	int64 Id = 2;
	Unity.Mathematics.float3 Position = 3;
	Unity.Mathematics.quaternion Rotation = 4;
}

// ResponseType G2C_Ping
message C2G_Ping // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Ping // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 Time = 4;
}


message G2C_Test // ISessionMessage
{
}

// ResponseType M2C_Reload
message C2M_Reload // ISessionRequest
{
	int32 RpcId = 1;
	string Account = 2;
	string Password = 3;
}

message M2C_Reload // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType R2C_Login
message C2R_Login // ISessionRequest
{
	int32 RpcId = 1;
	string  Account = 2;  // 帐号
	string  Password = 3;  // 密码
}

message R2C_Login // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	string Address = 4;
	int64 Key = 5;
	int64 GateId = 6;
}

// ResponseType G2C_LoginGate
message C2G_LoginGate // ISessionRequest
{
	int32 RpcId = 1;
	int64 Key = 2;  // 帐号
	int64 GateId = 3;
}

message G2C_LoginGate // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int64 PlayerId = 4;
}

message G2C_TestHotfixMessage // ISessionMessage
{
	string Info = 1;
}

// ResponseType M2C_TestRobotCase
message C2M_TestRobotCase // ILocationRequest
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	int32 N = 4;
}

message C2M_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

message M2C_TestRobotCase2 // ILocationMessage
{
	int32 RpcId = 1;
	int32 N = 2;
}

// ResponseType M2C_TransferMap
message C2M_TransferMap // ILocationRequest
{
	int32 RpcId = 1;
}

message M2C_TransferMap // ILocationResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2C_Benchmark
message C2G_Benchmark // ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_Benchmark // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}


/*
	类上方的为绑定回复类型，类右侧为继承的接口
*/
/*账号登录*/
// ResponseType R2C_LoginAccountResponse
message C2R_LoginAccountRequest // ISessionRequest
{
	int32 RpcId = 1;
	
	string Account = 2;
	string Password = 3;
}

message R2C_LoginAccountResponse // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	
	string token = 4;
}

/*登录后的服务器列表请求*/
/*区服信息*/
message ServerInfoProto
{
	int32 id = 1;
	int32 state = 2;
	string serverName = 3;
}

// ResponseType R2C_GetServerInfosResponse
message C2R_GetServerInfosRequest // ISessionRequest
{
	int32 RpcId = 1;
	
	string token = 2;
	string account = 3;	/*为啥还要用account*/
}

message R2C_GetServerInfosResponse //ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	
	repeated ServerInfoProto serverInfos = 4;
}

/*账号注册*/
// ResponseType R2C_RegisterAccountResponse
message C2R_RegisterAccountRequest // ISessionRequest
{
	int32 RpcId = 1;

	string Account = 2;
	string Password = 3;
}

message R2C_RegisterAccountResponse // ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

/*获取角色信息*/
message RoleInfoProto
{
	int32 id = 1;
	string name = 2;
	int32 state = 3;
	string account = 4;
	int64 lastLoginTime = 5;
	int64 createTime = 6;
	int32 serverID= 7;
}

// ResponseType R2C_GetRolesResponse
message C2R_GetRolesRequest //ISessionRequest
{
	int32 RpcId = 1;
	
	string token = 2;
	string account = 3;
	int32 serverID = 4;
}

message R2C_GetRolesResponse //ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	
	repeated RoleInfoProto roles = 4;
}

/*创建角色*/
// ResponseType R2C_GetRolesResponse
message C2R_CreateRoleRequest //ISessionRequest
{
	int32 RpcId = 1;
	
	string token = 2;
	string account = 3;
	int32 serverID = 4;
	string roleName = 5;
}

message R2C_CreateRoleResponse //ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;

	RoleInfoProto role = 4;
}

/*获取ReamlKey 用于Gate验证*/
// ResponseType R2C_RealmKeyResponse
message C2R_RealmKeyRequest //ISessionRequest
{
	int32 RpcId = 1;
	
	string token = 2;
	string account = 3;
	int32 serverID = 4;
}

message R2C_RealmKeyResponse //ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
	
	int64 reamlKey = 4;
	string gateAddress = 5;
	int64 gateID = 6;
}

/*角色进入游戏的网关验证*/
// ResponseType R2C_RealmKeyResponse
message	C2G_LoginGameGateRequest //ISessionRequest
{
	int32 RpcId = 1;
	
	int64 key = 2;
	string account = 3;
	int64 roleID = 4;
}

message	G2C_LoginGameGateResponse //ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

// ResponseType G2C_EnterGameResponse
message C2G_EnterGameRequest //ISessionRequest
{
	int32 RpcId = 1;
}

message G2C_EnterGameResponse //ISessionResponse
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}

/*A:All-任意服务器  强制下线*/
message A2C_Disconnect // ISessionMessage
{
	int32 RpcId = 1;
	int32 Error = 2;
	string Message = 3;
}